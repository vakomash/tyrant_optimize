# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1


commands:
    save_artifacts:
        steps:
            - run: |
                mkdir -p /tmp/bins
                cp *.exe /tmp/bins || :
                cp tuo-test /tmp/bins || :
                cp tuo-debug /tmp/bins || :
                cp tuo /tmp/bins || :
                echo "done"
            - store_artifacts:
                path: /tmp/bins

jobs:
    build-linux:
        parameters:
            target:
                type: string
        docker:
            - image: vakomash/tuobuild
        steps:
            - checkout
            - run: make << parameters.target >> -j4
            - persist_to_workspace:
                root: .
                paths:
                    - tuo
                    - tuo-debug
                    - tuo-test
    build-win:
        parameters:
            omp:
                type: string
            dbg:
                type: string
            bit:
                type: string
        docker:
            - image: vakomash/tuobuild
        steps:
            - checkout
            - run: |
                omp=<< parameters.omp >>
                dbg=<< parameters.dbg >>
                bit=<< parameters.bit >>

                BUILD_TAG=v4.4.2

                MXE_DIR=/usr/lib/mxe

                DFLAGS=""
                BDIR="build-dir${bit}${omp}${dbg}"
                export NAME="tuo${bit}${omp}${dbg}.exe"

                if [ "$bit" = "" ]; then
                #Windows x64 Build
                MXE_TARGET=x86_64-w64-mingw32.static
                fi
                if [ "$bit" = "-x86" ]; then
                #Windows x86 Build
                MXE_TARGET=i686-w64-mingw32.static
                fi

                #No windows timer on default
                if [ "$dbg" = "" ]; then
                DFLAGS="${DFLAGS} -DDEBUG:STRING=\"-DNTIMER\""
                fi
                #activate openmp
                if [ "$omp" = "-openmp" ]; then
                DFLAGS="${DFLAGS} -DUSE_OPENMP=ON"
                fi
                #prep cmake
                ${MXE_DIR}/usr/bin/${MXE_TARGET}-cmake . -B${BDIR} -DVERSION:STRING="${BUILD_TAG}${bit}${omp}${dbg}"  ${DFLAGS}

                #cmake sets dndebug by default => remove that
                if [ "$dbg" = "-debug" ]; then
                sed -i -e 's/-DNDEBUG//g' ${BDIR}/CMakeCache.txt
                fi

                # compile
                cmake --build ${BDIR} -j4

                mkdir -p workspace
                mv ${BDIR}/tuo.exe workspace/${NAME}
            - persist_to_workspace:
                root: workspace
                paths: "*.exe"
    
    save_art:
        docker:
            - image: cimg/base:2021.04
        steps:
            - attach_workspace:
                at: .
            - run: ls
            - store_artifacts:
                path: .

workflows:
    build-workflow:
        jobs:
            - build-linux:
                matrix:
                    parameters:
                        target: ["main", "debug", "test"]
            - build-win:
                matrix:
                    parameters:
                        omp: ["", "-openmp"]
                        dbg: ["", "-debug", "-time"]
                        bit: ["", "-x86"]
            - save_art:
                requires:
                    - build-linux
                    - build-win
