version: 2.1

orbs:
  win: circleci/windows@2.2.0

jobs:
    build-linux:
        parameters:
            target:
                type: string
        docker:
            - image: vakomash/tuobuild
        steps:
            - checkout
            - run: make << parameters.target >> -j4
            - persist_to_workspace:
                root: .
                paths:
                    - tuo
                    - tuo-debug
                    - tuo-test
    build-win:
        parameters:
            omp:
                type: string
            dbg:
                type: string
            bit:
                type: string
        docker:
            - image: vakomash/tuobuild
        steps:
            - checkout
            - run: |
                omp=<< parameters.omp >>
                dbg=<< parameters.dbg >>
                bit=<< parameters.bit >>

                BUILD_TAG=`git describe --tags --abbrev=1 --dirty | sed -e 's/-/./g'`
                MXE_DIR=/usr/lib/mxe

                DFLAGS=""
                BDIR="build-dir${bit}${omp}${dbg}"
                export NAME="tuo${bit}${omp}${dbg}.exe"

                if [ "$bit" = "-x86" ]; then
                    #Windows x86 Build
                    MXE_TARGET=i686-w64-mingw32.static
                else
                    MXE_TARGET=x86_64-w64-mingw32.static
                fi

                #No windows timer on default
                if [ "$dbg" = "" ]; then
                DFLAGS="${DFLAGS} -DDEBUG:STRING=\"-DNTIMER\""
                fi
                #activate openmp
                if [ "$omp" = "-openmp" ]; then
                DFLAGS="${DFLAGS} -DUSE_OPENMP=ON"
                fi
                #prep cmake
                ${MXE_DIR}/usr/bin/${MXE_TARGET}-cmake . -B${BDIR} -DVERSION:STRING="${BUILD_TAG}${bit}${omp}${dbg}"  ${DFLAGS}

                #cmake sets dndebug by default => remove that
                if [ "$dbg" = "-debug" ]; then
                sed -i -e 's/-DNDEBUG//g' ${BDIR}/CMakeCache.txt
                fi

                # compile
                cmake --build ${BDIR} -j4

                mkdir -p workspace
                mv ${BDIR}/tuo.exe workspace/${NAME}
            - persist_to_workspace:
                root: workspace
                paths: "*.exe"

    build-ahk:
        executor:
            name: win/default
            shell: powershell.exe
        steps:
            - checkout
            - run:
                command: |
                    $ProgressPreference = "SilentlyContinue"
                    Invoke-WebRequest -Uri "https://www.autohotkey.com/download/ahk.zip" -OutFile "ahk.zip"
                    Expand-Archive .\\ahk.zip .
                    mkdir workspace
                    .\\Compiler\\Ahk2Exe.exe /in SimpleTUOLiveSim.ahk /out workspace\\SimpleTUOLiveSim.exe /bin "Compiler\\Unicode 64-bit.bin"
                    .\\Compiler\\Ahk2Exe.exe /in SimpleTUOLiveSim.ahk /out workspace\\SimpleTUOLiveSim-x86.exe /bin "Compiler\\Unicode 32-bit.bin"
                    .\\Compiler\\Ahk2Exe.exe /in SimpleTUOptimizeStarter.ahk /out workspace\\SimpleTUOptimizeStarter.exe /bin "Compiler\\Unicode 64-bit.bin"
                    .\\Compiler\\Ahk2Exe.exe /in SimpleTUOptimizeStarter.ahk /out workspace\\SimpleTUOptimizeStarter-x86.exe /bin "Compiler\\Unicode 32-bit.bin"
            - persist_to_workspace:
                root: workspace
                paths: "*.exe"
            
  
    save_art:
        docker:
            - image: cimg/base:2021.04
        steps:
            - attach_workspace:
                at: .
            - run: |
                ls
                zip -r release.zip *
            - store_artifacts:
                path: ./release.zip

workflows:
    build-workflow:
        jobs:
            - build-ahk
            - build-linux:
                matrix:
                    parameters:
                        target: ["main", "debug", "test"]
            - build-win:
                matrix:
                    parameters:
                        omp: ["", "-openmp"]
                        dbg: ["", "-debug", "-time"]
                        bit: ["", "-x86"]
            - save_art:
                requires:
                    - build-ahk
                    - build-linux
                    - build-win

